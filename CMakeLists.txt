cmake_minimum_required(VERSION 2.6)
project(vishnew Fortran)

# default build type: Release
if(NOT CMAKE_BUILD_TYPE)
  set(CMAKE_BUILD_TYPE "Release")
endif()

# default install prefix: ~/.local
if(CMAKE_INSTALL_PREFIX_INITIALIZED_TO_DEFAULT)
  set(CMAKE_INSTALL_PREFIX "$ENV{HOME}/.local"
      CACHE PATH "Install path prefix, prepended onto install directories."
      FORCE)
endif()

message(STATUS "Build type: ${CMAKE_BUILD_TYPE}")
message(STATUS "Install prefix: ${CMAKE_INSTALL_PREFIX}")


find_library(HDF5_FORTRAN_LIB hdf5_fortran)
if("${HDF5_FORTRAN_LIB}" STREQUAL "HDF5_FORTRAN_LIB-NOTFOUND")
  message(STATUS "HDF5 C++ library not found")
endif()

find_path(HDF5_INCLUDE_DIRS hdf5.mod)
#set(HDF5_INCLUDE_DIRS hdf5.mod)
if("${HDF5_INCLUDE_DIRS}" STREQUAL "HDF5_INCLUDE_DIRS-NOTFOUND")
  message(STATUS "HDF5  library not found")
endif()



find_library(HDF5_C_LIB hdf5)

include_directories(${HDF5_INCLUDE_DIRS})


# Set default architecture flags to optimize for the current system,
# but don't override user settings.
if(NOT CMAKE_Fortran_FLAGS MATCHES "-march|-mtune")
  set(CMAKE_Fortran_FLAGS "${CMAKE_Fortran_FLAGS} -march=native")
endif()

set(CMAKE_Fortran_FLAGS "${CMAKE_Fortran_FLAGS} -cpp -fno-align-commons")

install(FILES ${PROJECT_NAME}.conf DESTINATION ${PROJECT_NAME})

add_subdirectory(eos)
add_subdirectory(src)
